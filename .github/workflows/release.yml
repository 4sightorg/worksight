name: Release Build & Artifacts

permissions:
  contents: read
  packages: write

on:
  push:
    tags:
      - 'v*' # triggers on version tags like v1.0.0

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  build-apps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [web, docs]
      max-parallel: 2
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --store ~/.pnpm-store --prefer-offline

      - name: Lint ${{ matrix.app }}
        run: pnpm --filter @worksight/${{ matrix.app }} lint

      - name: Build ${{ matrix.app }}
        run: pnpm build --filter=@worksight/${{ matrix.app }}

      - name: Package ${{ matrix.app }} into ZIP
        run: |
          mkdir -p release/${{ matrix.app }}
          cp -r apps/${{ matrix.app }}/.next release/${{ matrix.app }}/
          cp -r apps/${{ matrix.app }}/package.json release/${{ matrix.app }}/
          cd release
          zip -r ../${{ matrix.app }}-${GITHUB_REF_NAME}.zip ${{ matrix.app }}
          cd ..

      - name: Upload ${{ matrix.app }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-${GITHUB_REF_NAME}
          path: ${{ matrix.app }}-${GITHUB_REF_NAME}.zip

  full-zip:
    needs: build-apps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create full ZIP
        run: |
          cd release
          zip -r full-${GITHUB_REF_NAME}.zip *
          cd ..

      - name: Upload full artifact
        uses: actions/upload-artifact@v4
        with:
          name: full-${GITHUB_REF_NAME}
          path: release/full-${GITHUB_REF_NAME}.zip

  docker:
    needs: build-apps
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [web, docs]
      max-parallel: 2
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}/${{ matrix.app }}:${GITHUB_REF_NAME} \
            -f apps/${{ matrix.app }}/Dockerfile .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/${{ matrix.app }}:${GITHUB_REF_NAME}
