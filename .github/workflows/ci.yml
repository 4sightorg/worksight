name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # Job 1: Install dependencies and cache
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Set cache key output
        id: cache-keys
        run: echo "cache-key=${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

  # Job 2: Linting and Code Quality
  lint:
    name: Lint & Code Quality
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run ESLint
        run: pnpm lint

      - name: Run Prettier check
        run: pnpm format:check || echo "Format check failed, but continuing..."

  # Job 3: Type checking
  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      # - name: Run type check
      #   run: pnpm type-check

  # Job 4: Testing
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      # - name: Run tests
      #   run: pnpm test:ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./apps/web/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Job 5: Build applications
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [setup, lint, typecheck]
    strategy:
      matrix:
        app: [web, docs]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            apps/*/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Build application
        run: pnpm build --filter=@worksight/${{ matrix.app }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-build
          path: |
            apps/${{ matrix.app }}/.next
            apps/${{ matrix.app }}/.vitepress/dist
          retention-days: 1

      - name: Run quality checks
        run: pnpm run quality

      - name: Build application
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_DEV_URL: ${{ vars.NEXT_PUBLIC_DEV_URL }}
          NEXT_PUBLIC_IS_OFFLINE: ${{ vars.NEXT_PUBLIC_IS_OFFLINE || 'false' }}
          NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY: ${ vars.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY }
          IS_OFFLINE: ${{ vars.IS_OFFLINE || 'false' }}
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
