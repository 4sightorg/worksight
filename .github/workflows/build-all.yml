name: Build & Publish Docker Images

on:
  workflow_dispatch:
  push:
    branches: [main, dev]
  pull_request:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - 'apps/docs/**'
            web:
              - 'apps/web/**'

  build:
    needs: changes
    if: needs.changes.outputs.docs == 'true' || needs.changes.outputs.web == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [docs, web]
      max-parallel: 2
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm --filter @worksight/${{ matrix.app }} lint

      - name: Build Docker image
        if: needs.changes.outputs[matrix.app] == 'true'
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}/${{ matrix.app }}:latest \
            -f apps/${{ matrix.app }}/Dockerfile .

      - name: Log in to GHCR
        if: github.event_name != 'pull_request' && needs.changes.outputs[matrix.app] == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        if: github.event_name != 'pull_request' && needs.changes.outputs[matrix.app] == 'true'
        run: docker push ghcr.io/${{ github.repository }}/${{ matrix.app }}:latest
